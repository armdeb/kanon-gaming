{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Videos\\\\kanon-alberto-test\\\\frontend\\\\src\\\\components\\\\SlotMachine\\\\SlotMachine.tsx\",\n  _s = $RefreshSig$();\nimport { useResponsive, useSpin } from '@/hooks';\nimport { coinStore } from '@/stores/coinStore';\nimport { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Slot } from './Slot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SlotMachine = _s(observer(_c = _s(({\n  slotAniInterval = 1000\n}) => {\n  _s();\n  const {\n    data,\n    refetch\n  } = useSpin();\n  const [stops, setStops] = useState([undefined, undefined, undefined]);\n  const [spinning, setSpinning] = useState(false);\n  const [winnings, setWinnings] = useState(undefined);\n  const handleSpin = () => {\n    if (coinStore.coins > 0) {\n      coinStore.subtractCoins(1);\n      setSpinning(true);\n      setWinnings(undefined);\n      setStops([undefined, undefined, undefined]);\n      refetch();\n    }\n  };\n  useEffect(() => {\n    let timer;\n    if (data) {\n      // 1. stop spin animation\n      let i = 0;\n      let newStops = [...stops];\n      timer = window.setInterval(() => {\n        newStops = [...newStops];\n        newStops[i] = data.spins[i];\n        setStops(newStops);\n        i++;\n        if (i >= newStops.length) {\n          clearInterval(timer);\n          timer = undefined;\n\n          // 2. display winnings and add coins (if win)\n          setWinnings(data.winnings);\n          if (data.winnings) {\n            coinStore.addCoins(data.winnings);\n          }\n\n          // 3. enable spin button for next round\n          setSpinning(false);\n        }\n      }, slotAniInterval);\n    }\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n\n    // animation should not update and re-render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n  const {\n    width: imgWidth,\n    height: imgHeight\n  } = useResponsive({\n    sm: {\n      width: 75,\n      height: 75\n    },\n    md: {\n      width: 100,\n      height: 100\n    },\n    lg: {\n      width: 150,\n      height: 150\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    style: {\n      '--slot-size': imgHeight + 'px'\n    },\n    \"data-testid\": \"slot-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center my-5 overflow-hidden\",\n      style: {\n        width: `${imgWidth * stops.length}px`,\n        height: 'var(--slot-size)',\n        margin: '1.25rem auto'\n      },\n      children: stops.map((stop, index) => /*#__PURE__*/_jsxDEV(Slot, {\n        imgHeight: imgHeight,\n        stop: stop,\n        spinning: spinning\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      onClick: handleSpin,\n      disabled: spinning,\n      \"data-testid\": \"spin-button\",\n      children: spinning ? 'Spinning...' : 'Spin to Win!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"coins\",\n        children: [\"Coins: \", coinStore.coins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), winnings !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"winnings\",\n        children: [\"Winnings: \", winnings, \" coins\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}, \"nNaM/UD8cHZifNRDbNuAJmmYs6g=\", false, function () {\n  return [useSpin, useResponsive];\n})), \"nNaM/UD8cHZifNRDbNuAJmmYs6g=\", false, function () {\n  return [useSpin, useResponsive];\n});\n_c2 = SlotMachine;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlotMachine$observer\");\n$RefreshReg$(_c2, \"SlotMachine\");","map":{"version":3,"names":["useResponsive","useSpin","coinStore","observer","React","useEffect","useState","Slot","jsxDEV","_jsxDEV","SlotMachine","_s","_c","slotAniInterval","data","refetch","stops","setStops","undefined","spinning","setSpinning","winnings","setWinnings","handleSpin","coins","subtractCoins","timer","i","newStops","window","setInterval","spins","length","clearInterval","addCoins","width","imgWidth","height","imgHeight","sm","md","lg","className","style","children","margin","map","stop","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/Usuario/Videos/kanon-alberto-test/frontend/src/components/SlotMachine/SlotMachine.tsx"],"sourcesContent":["import { useResponsive, useSpin } from '@/hooks';\nimport { coinStore } from '@/stores/coinStore';\nimport { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Slot } from './Slot';\n\nexport interface SlotMachineProps {\n  slotAniInterval?: number;\n}\n\nexport const SlotMachine: React.FC<SlotMachineProps> = observer(({\n  slotAniInterval = 1000,\n}) => {\n  const { data, refetch } = useSpin();\n  const [stops, setStops] = useState<(string | undefined)[]>([undefined, undefined, undefined]);\n  const [spinning, setSpinning] = useState(false);\n  const [winnings, setWinnings] = useState<number | undefined>(undefined);\n\n  const handleSpin = () => {\n    if (coinStore.coins > 0) {\n      coinStore.subtractCoins(1);\n\n      setSpinning(true);\n      setWinnings(undefined);\n      setStops([undefined, undefined, undefined]);\n\n      refetch();\n    }\n  };\n\n  useEffect(() => {\n    let timer: number | undefined;\n    if (data) {\n      // 1. stop spin animation\n      let i = 0;\n      let newStops = [...stops];\n      timer = window.setInterval(() => {\n        newStops = [...newStops];\n        newStops[i] = data.spins[i];\n        setStops(newStops);\n        i++;\n\n        if (i >= newStops.length) {\n          clearInterval(timer);\n          timer = undefined;\n\n          // 2. display winnings and add coins (if win)\n          setWinnings(data.winnings);\n          if (data.winnings) {\n            coinStore.addCoins(data.winnings);\n          }\n\n          // 3. enable spin button for next round\n          setSpinning(false);\n        }\n      }, slotAniInterval);\n    }\n\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n\n    // animation should not update and re-render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const {\n    width: imgWidth,\n    height: imgHeight,\n  } = useResponsive({\n    sm: { width: 75, height: 75 },\n    md: { width: 100, height: 100 },\n    lg: { width: 150, height: 150 },\n  });\n\n  return (\n    <div className=\"text-center\" style={{ '--slot-size': imgHeight + 'px' } as React.CSSProperties} data-testid=\"slot-machine\">\n      <div\n        className=\"flex justify-center my-5 overflow-hidden\"\n        style={{\n          width: `${imgWidth * stops.length}px`,\n          height: 'var(--slot-size)',\n          margin: '1.25rem auto',\n        }}\n      >\n        {stops.map((stop, index) => (\n          <Slot key={index} imgHeight={imgHeight} stop={stop} spinning={spinning} />\n        ))}\n      </div>\n      <button\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        onClick={handleSpin}\n        disabled={spinning}\n        data-testid=\"spin-button\"\n      >\n        {spinning ? (\n          'Spinning...'\n        ) : (\n          'Spin to Win!'\n        )}\n      </button>\n      <div className=\"my-5\">\n        <p data-testid=\"coins\">Coins: {coinStore.coins}</p>\n\n        {winnings !== undefined && (\n          <p data-testid=\"winnings\">Winnings: {winnings} coins</p>\n        )}\n      </div>\n    </div>\n  );\n});\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,OAAO,QAAQ,SAAS;AAChD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9B,OAAO,MAAMC,WAAuC,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,CAAC;EAC/DE,eAAe,GAAG;AACpB,CAAC,KAAK;EAAAF,EAAA;EACJ,MAAM;IAAEG,IAAI;IAAEC;EAAQ,CAAC,GAAGd,OAAO,CAAC,CAAC;EACnC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAyB,CAACY,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC,CAAC;EAC7F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAqBY,SAAS,CAAC;EAEvE,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIrB,SAAS,CAACsB,KAAK,GAAG,CAAC,EAAE;MACvBtB,SAAS,CAACuB,aAAa,CAAC,CAAC,CAAC;MAE1BL,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAACJ,SAAS,CAAC;MACtBD,QAAQ,CAAC,CAACC,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC,CAAC;MAE3CH,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAyB;IAC7B,IAAIZ,IAAI,EAAE;MACR;MACA,IAAIa,CAAC,GAAG,CAAC;MACT,IAAIC,QAAQ,GAAG,CAAC,GAAGZ,KAAK,CAAC;MACzBU,KAAK,GAAGG,MAAM,CAACC,WAAW,CAAC,MAAM;QAC/BF,QAAQ,GAAG,CAAC,GAAGA,QAAQ,CAAC;QACxBA,QAAQ,CAACD,CAAC,CAAC,GAAGb,IAAI,CAACiB,KAAK,CAACJ,CAAC,CAAC;QAC3BV,QAAQ,CAACW,QAAQ,CAAC;QAClBD,CAAC,EAAE;QAEH,IAAIA,CAAC,IAAIC,QAAQ,CAACI,MAAM,EAAE;UACxBC,aAAa,CAACP,KAAK,CAAC;UACpBA,KAAK,GAAGR,SAAS;;UAEjB;UACAI,WAAW,CAACR,IAAI,CAACO,QAAQ,CAAC;UAC1B,IAAIP,IAAI,CAACO,QAAQ,EAAE;YACjBnB,SAAS,CAACgC,QAAQ,CAACpB,IAAI,CAACO,QAAQ,CAAC;UACnC;;UAEA;UACAD,WAAW,CAAC,KAAK,CAAC;QACpB;MACF,CAAC,EAAEP,eAAe,CAAC;IACrB;IAEA,OAAO,MAAM;MACX,IAAIa,KAAK,EAAE;QACTO,aAAa,CAACP,KAAK,CAAC;MACtB;IACF,CAAC;;IAED;IACA;EACF,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,MAAM;IACJqB,KAAK,EAAEC,QAAQ;IACfC,MAAM,EAAEC;EACV,CAAC,GAAGtC,aAAa,CAAC;IAChBuC,EAAE,EAAE;MAAEJ,KAAK,EAAE,EAAE;MAAEE,MAAM,EAAE;IAAG,CAAC;IAC7BG,EAAE,EAAE;MAAEL,KAAK,EAAE,GAAG;MAAEE,MAAM,EAAE;IAAI,CAAC;IAC/BI,EAAE,EAAE;MAAEN,KAAK,EAAE,GAAG;MAAEE,MAAM,EAAE;IAAI;EAChC,CAAC,CAAC;EAEF,oBACE5B,OAAA;IAAKiC,SAAS,EAAC,aAAa;IAACC,KAAK,EAAE;MAAE,aAAa,EAAEL,SAAS,GAAG;IAAK,CAAyB;IAAC,eAAY,cAAc;IAAAM,QAAA,gBACxHnC,OAAA;MACEiC,SAAS,EAAC,0CAA0C;MACpDC,KAAK,EAAE;QACLR,KAAK,EAAG,GAAEC,QAAQ,GAAGpB,KAAK,CAACgB,MAAO,IAAG;QACrCK,MAAM,EAAE,kBAAkB;QAC1BQ,MAAM,EAAE;MACV,CAAE;MAAAD,QAAA,EAED5B,KAAK,CAAC8B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBvC,OAAA,CAACF,IAAI;QAAa+B,SAAS,EAAEA,SAAU;QAACS,IAAI,EAAEA,IAAK;QAAC5B,QAAQ,EAAEA;MAAS,GAA5D6B,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyD,CAC1E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3C,OAAA;MACEiC,SAAS,EAAC,sEAAsE;MAChFW,OAAO,EAAE9B,UAAW;MACpB+B,QAAQ,EAAEnC,QAAS;MACnB,eAAY,aAAa;MAAAyB,QAAA,EAExBzB,QAAQ,GACP,aAAa,GAEb;IACD;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACT3C,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAE,QAAA,gBACnBnC,OAAA;QAAG,eAAY,OAAO;QAAAmC,QAAA,GAAC,SAAO,EAAC1C,SAAS,CAACsB,KAAK;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAElD/B,QAAQ,KAAKH,SAAS,iBACrBT,OAAA;QAAG,eAAY,UAAU;QAAAmC,QAAA,GAAC,YAAU,EAACvB,QAAQ,EAAC,QAAM;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;EAAA,QAnG2BnD,OAAO,EA0D7BD,aAAa;AAAA,EAyClB,CAAC;EAAA,QAnG0BC,OAAO,EA0D7BD,aAAa;AAAA,EAyCjB;AAACuD,GAAA,GAtGU7C,WAAuC;AAAA,IAAAE,EAAA,EAAA2C,GAAA;AAAAC,YAAA,CAAA5C,EAAA;AAAA4C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}