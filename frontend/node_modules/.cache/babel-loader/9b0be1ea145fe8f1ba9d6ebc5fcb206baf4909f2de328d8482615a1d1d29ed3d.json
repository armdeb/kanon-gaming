{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Videos\\\\kanon-alberto-test\\\\frontend\\\\src\\\\components\\\\SlotMachine\\\\Slot.tsx\";\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport apple from '@/assets/apple.png';\nimport banana from '@/assets/banana.png';\nimport cherry from '@/assets/cherry.png';\nimport lemon from '@/assets/lemon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Slot = ({\n  imgHeight,\n  spinning,\n  stop\n}) => {\n  const images = [cherry, lemon, apple, banana, cherry]; // one more `cherry` from seamless scrolling\n  const stops = {\n    cherry: -imgHeight * 4,\n    // to avoid the cherry stopping immediately\n    lemon: -imgHeight * 1,\n    apple: -imgHeight * 2,\n    banana: -imgHeight * 3\n  };\n  let props;\n  if (stop) {\n    props = {\n      top: stops[stop],\n      type: 'ease-out',\n      count: 1\n    };\n  } else {\n    if (spinning) {\n      props = {\n        top: -(images.length - 1) * imgHeight,\n        // remove excess `cherry`\n        type: 'linear',\n        count: 'infinite'\n      };\n    } else {\n      props = {\n        top: 0,\n        type: 'linear',\n        count: 0\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(SlotImgContainer, {\n    ...props,\n    \"data-testid\": \"slot-machine-item\",\n    children: [/*#__PURE__*/_jsxDEV(SlotImg, {\n      src: cherry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlotImg, {\n      src: lemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlotImg, {\n      src: apple\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlotImg, {\n      src: banana\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlotImg, {\n      src: cherry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Slot;\nconst spinAnimation = top => keyframes`\n  from {\n    transform: translateY(0);\n  }\n  to {\n    transform: translateY(${top}px);\n  }\n`;\nconst SlotImgContainer = styled.div`\n  animation: ${({\n  top\n}) => spinAnimation(top)} 0.2s ${({\n  type\n}) => type} forwards ${({\n  count\n}) => count};\n`;\n_c2 = SlotImgContainer;\nconst SlotImg = styled.img`\n  width: var(--slot-size);\n  height: var(--slot-size);\n`;\n_c3 = SlotImg;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Slot\");\n$RefreshReg$(_c2, \"SlotImgContainer\");\n$RefreshReg$(_c3, \"SlotImg\");","map":{"version":3,"names":["React","styled","keyframes","apple","banana","cherry","lemon","jsxDEV","_jsxDEV","Slot","imgHeight","spinning","stop","images","stops","props","top","type","count","length","SlotImgContainer","children","SlotImg","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","spinAnimation","div","_c2","img","_c3","$RefreshReg$"],"sources":["C:/Users/Usuario/Videos/kanon-alberto-test/frontend/src/components/SlotMachine/Slot.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nimport apple from '@/assets/apple.png';\nimport banana from '@/assets/banana.png';\nimport cherry from '@/assets/cherry.png';\nimport lemon from '@/assets/lemon.png';\n\nexport interface SlotProps {\n  imgHeight: number;\n  spinning: boolean;\n  stop?: string;\n}\nexport const Slot: React.FC<SlotProps> = ({ imgHeight, spinning, stop }) => {\n  const images = [cherry, lemon, apple, banana, cherry]; // one more `cherry` from seamless scrolling\n  const stops: Record<string, number> = {\n    cherry: -imgHeight * 4, // to avoid the cherry stopping immediately\n    lemon: -imgHeight * 1,\n    apple: -imgHeight * 2,\n    banana: -imgHeight * 3,\n  };\n\n  let props: SlotImageContainerProps;\n\n  if (stop) {\n    props = {\n      top: stops[stop],\n      type: 'ease-out',\n      count: 1,\n    };\n  } else {\n    if (spinning) {\n      props = {\n        top: -(images.length - 1) * imgHeight, // remove excess `cherry`\n        type: 'linear',\n        count: 'infinite',\n      };\n    } else {\n      props = {\n        top: 0,\n        type: 'linear',\n        count: 0,\n      };\n    }\n  }\n\n  return (\n    <SlotImgContainer {...props} data-testid=\"slot-machine-item\">\n      <SlotImg src={cherry} />\n      <SlotImg src={lemon} />\n      <SlotImg src={apple} />\n      <SlotImg src={banana} />\n      <SlotImg src={cherry} />\n    </SlotImgContainer>\n  );\n};\n\nconst spinAnimation = (top: number) => keyframes`\n  from {\n    transform: translateY(0);\n  }\n  to {\n    transform: translateY(${top}px);\n  }\n`;\n\ninterface SlotImageContainerProps {\n  top: number;\n  type: 'linear' | 'ease-out';\n  count: 'infinite' | number;\n}\n\nconst SlotImgContainer = styled.div<SlotImageContainerProps>`\n  animation: ${({ top }) => spinAnimation(top)} 0.2s ${({ type }) => type} forwards ${({ count }) => count};\n`;\n\nconst SlotImg = styled.img`\n  width: var(--slot-size);\n  height: var(--slot-size);\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}